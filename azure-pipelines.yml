trigger:
  branches:
    include:
      - main

pool:
  name: 'my-agent'

variables:
  imageName: 'snakegameapp'
  containerRegistry: 'HTS-L2-ACR-SC'
  tag: '${Build.BuildId}'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        steps:
          - task: JavaToolInstaller@0
            displayName: 'Install JDK 11'
            inputs:
              versionSpec: '11'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          - script: |
              echo "Installing JDK 11..."
              sudo apt update
              sudo apt install -y openjdk-11-jdk
              echo "JAVA_HOME_11_X64=/usr/lib/jvm/java-11-openjdk-amd64" | sudo tee -a /etc/environment
              export JAVA_HOME_11_X64=/usr/lib/jvm/java-11-openjdk-amd64
              export JAVA_HOME=$JAVA_HOME_11_X64
              export PATH=$JAVA_HOME/bin:$PATH
              java -version
            displayName: 'Install JDK 11 on Agent'
          - task: Maven@3
            displayName: 'Build with Maven'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              javaHomeOption: 'JDKVersion'
              JDKVersionOption: '1.11'
              mavenVersionOption: 'Default'
          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnMissingResultsFile: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish JAR Artifact'
            inputs:
              PathtoPublish: 'target/*.jar'
              ArtifactName: 'drop'
              publishLocation: 'Container'
          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              containerRegistry: '$(containerRegistry)'
              repository: '$(imageName)'
              command: 'buildandPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(tag)'