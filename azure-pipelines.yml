trigger:
  branches:
    include:
      - main

variables:
  imageName: 'snakegameapp'
  containerRegistry: 'HTS-L2-ACR-SC'
  tag: '$(Build.BuildId)'
  mavenVersion: '3.9.6'  # Specify Maven version
  javaVersion: '17'
  javaHome: '/usr/lib/jvm/java-17-openjdk-amd64'

stages:
  - stage: Build
    displayName: 'Build and Package'
    jobs:
      - job: Build
        displayName: 'Build Java Application'
        pool:
          name: 'vmss-agent'
          demands:
          - agent.os -equals Linux  # Ensure Linux agents
        
        steps:
          # Install JDK 17 and setup environment
          - script: |
              echo "Installing JDK $(javaVersion)..."
              sudo apt-get update -y
              sudo apt-get install -y openjdk-$(javaVersion)-jdk
              echo "JAVA_HOME=$(javaHome)" | sudo tee -a /etc/environment
              echo "##vso[task.setvariable variable=JAVA_HOME]$(javaHome)"
              echo "##vso[task.prependpath]$(javaHome)/bin"
              java -version
              javac -version
            displayName: 'Install and Configure JDK $(javaVersion)'
          # Maven build with test execution
          - task: Maven@3
            displayName: 'Maven Build and Test'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              options: '-DskipTests=false'
              publishJUnitResults: true
              testResultsFiles: '**/target/surefire-reports/TEST-*.xml'
              javaHomeOption: 'Path'
              jdkDirectory: '$(javaHome)'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              sonarQubeRunAnalysis: false
          - script: |
              echo "Listing built artifacts..."
              ls -la target/
              echo "JAR file:"
              find target -name "*.jar" -type f
            displayName: 'Verify JAR File Exists'
          # Publish build artifacts
          - task: PublishBuildArtifacts@1
            displayName: 'Publish JAR Artifacts'
            inputs:
              PathtoPublish: 'target/snakegame-0.0.1-SNAPSHOT.jar'
              ArtifactName: 'drop'
              publishLocation: 'Container'
            
          # Build and push Docker image
          - script: |
              echo "Setting up Docker permissions..."
              sudo groupadd docker || true
              sudo usermod -aG docker $(whoami)
              sudo chmod 666 /var/run/docker.sock
              docker --version
              docker info
            displayName: 'Configure Docker Access'

          - task: Docker@2
            displayName: 'Build and Push Docker Image'
            inputs:
              containerRegistry: '$(containerRegistry)'
              repository: '$(imageName)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(tag)'